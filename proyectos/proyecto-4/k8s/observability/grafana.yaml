apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: project-4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: project4
            - name: GF_DASHBOARDS_JSON_ENABLED
              value: "true"
            - name: GF_DASHBOARDS_JSON_PATH
              value: /var/lib/grafana/dashboards
            - name: GF_INSTALL_PLUGINS
              value: "grafana-piechart-panel"
          volumeMounts:
            - name: grafana-dashboard-config-volume
              mountPath: /var/lib/grafana/dashboards
              readOnly: true
            - name: grafana-dashboard-provider-volume
              mountPath: /etc/grafana/provisioning/dashboards
              readOnly: true
            - name: grafana-datasource-volume
              mountPath: /etc/grafana/provisioning/datasources
              readOnly: true
      volumes:
        - name: grafana-dashboard-config-volume
          configMap:
            name: grafana-dashboard-config
            items:
              - key: grafana-dashboard.json
                path: grafana-dashboard.json
        - name: grafana-dashboard-provider-volume
          configMap:
            name: grafana-dashboard-provider
            items:
              - key: provider.yaml
                path: provider.yaml
        - name: grafana-datasource-volume
          configMap:
            name: grafana-datasource
            items:
              - key: datasource.yaml
                path: datasource.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: project-4
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 31901